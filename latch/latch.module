<?php

/*
Latch Drupal 6 plugin - Integrates Latch into the Drupal 6 authentication process.
Copyright (C) 2013 Eleven Paths

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
*/

include('includes/latch.admin.inc');
include('includes/latch.pairing.inc');

include('includes/latchSDK/Latch.php');
include('includes/latchSDK/LatchResponse.php');

module_load_include('pages.inc', 'user');

function latch_init(){

}

function latch_views_api() {
  return array('api' => 2.0);
}


function latch_perm() {
  return array(
  	'latch administration',
	'pairing enabled',
  );
}



function latch_menu() {
	$items['admin/settings/latch'] = array(
		'title' => 'Latch Config',
		'description' => 'Configure Latch module.',		
		'page callback' => 'latch_admin',
		'page arguments' => array('settings'),		
		'access callback' => 'user_access',
		'access arguments' => array('latch administration'),		
		);	
	$items['admin/settings/latch/settings'] = array(
		'title' => 'Settings',
		'page arguments' => array('settings'),	
		'type' => MENU_DEFAULT_LOCAL_TASK,
		);
	$items['user/%/latch'] = array(
		'title' => 'Latch Account',
		'page callback' => 'latch_pairing',
		'page arguments' => array(1),
    	'access callback' => 'user_access',
    	'access arguments' => array('pairing enabled'),
    	'type' => MENU_LOCAL_TASK,
		'weight' => 10,
		);	
	
	return $items;
}

function latch_user($op, &$edit, &$account, $category = NULL) {
  if ($op == 'login') {

  	userProperlyLogged($edit, $account); 

  }
}


function userProperlyLogged($edit, $account){
	
	$appSecret = variable_get('latch_secret', '');
	$appId = variable_get('latch_appid', '');

	if (!empty($appId) && !empty($appSecret)){

		$query = db_query("SELECT * FROM {latch} WHERE uid=".$account->uid);
		$result = db_fetch_object($query);
		$latch_accountId = $result->latch_account;
				
		if (!empty($latch_accountId)) {
			$api = new Latch($appId, $appSecret);
			$statusResponse = $api->status($latch_accountId);

			$responseData = $statusResponse->getData();
			$responseError = $statusResponse->getError();
							
			// If something goes wrong, disable Latch temporary or permanently to prevent blocking the user
			if (empty($statusResponse) || (empty($responseData) && empty($responseError))) {
				//Login success due to download latch						
			} else {
				if (!empty($responseError)) {
					if ($responseError->getCode() == 201) {
						// If the account is externally unpaired, apply the changes in WP database						
						db_query("DELETE FROM {latch} WHERE uid=".$account->uid);
					}					
					return $user;
				}
			}
				
			if (!empty($responseData) && $responseData->{"operations"}->{$appId}->{"status"} === "on") {
				//LOGIN OK + STATUS = on
			} else {
				//LOGIN OK + STATUS = off
				//TODO: Show same error of invalid credentials
				user_logout();
			}
		}		

	}

}


